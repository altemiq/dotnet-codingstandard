name: update
on:
  schedule:
    - cron: '0 */1 * * *'
  workflow_dispatch:

concurrency:
  group: ci-site-${{ github.ref }}
  cancel-in-progress: false

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace}}/nuget

defaults:
  run:
    shell: pwsh

jobs:
  update_packages:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: internal/update-package@v1
        id: update-package
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # open the nuspec
          [xml]$xml = Get-Content 'Altemiq.DotNet.CodingStandard.nuspec'
          $nodes = $xml.SelectNodes('/package/metadata/dependencies/dependency')

          # set the git user
          git config user.name 'github-actions'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
          $updated = $false

          $nodes | ForEach-Object {
              $dependencyName = $_.Attributes['id'].Value
              $attribute = $_.Attributes['version']

              Write-Host "Checking ``$dependencyName``"
          
              $packages = Find-Package -Name $dependencyName -Source nuget.org -AllVersions
          
              $first = $packages[0]
              Write-Host "Found ``$($first.Name)`` - ``$($first.Version)``"
          
              if ($attribute.Value -ne $first.Version) {
                  Write-Host "Updating ``$dependencyName`` from ``$($attribute.Value)`` to ``$($first.Version)``"
                  $attribute.Value = $first.Version
                  $xml.Save('Altemiq.DotNet.CodingStandard.nuspec')
          
                  # commit this with the correct stuff
                  git add 'Altemiq.DotNet.CodingStandard.nuspec'
                  git commit -m "⬆️ update ``$dependencyName`` to ``$($first.Version)``"
                  $updated = $true
              }
          }

          if ($true -eq $updated) {
              git push
              gh workflow run ci.yml
          }
